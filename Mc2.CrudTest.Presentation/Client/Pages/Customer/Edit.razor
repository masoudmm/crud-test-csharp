@page "/Customer/Edit/{id:int}"
@using Mc2.CrudTest.Presentation.Application.Features.Commands.Edit;
@using Mc2.CrudTest.Presentation.Application.Features.Queries;
@using Mc2.CrudTest.Presentation.Application.ViewModels;

<PageTitle>Edit Customer</PageTitle>

<h1>Edit</h1>

@if (Model == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model=@Model OnSubmit=@ValidFormSubmitted>
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="col-xl-4 col-lg-4 col-md-5 mb-4">
            <label class="form-label">First Name:</label>
            <InputText class="form-control" @bind-Value="Model!.Firstname" />
        </div>

        <div class="col-xl-4 col-lg-4 col-md-5 mb-4">
            <label class="form-label">Last Name:</label>
            <InputText class="form-control" @bind-Value="Model!.Lastname" />
        </div>

        <div class="col-xl-4 col-lg-4 col-md-5 mb-4">
            <div class="form-group">
                <label class="form-label">Date Of Birth:</label>
                <InputDate class="form-control" @bind-Value="Model!.DateOfBirth" />
            </div>
        </div>

        <div class="col-xl-4 col-lg-4 col-md-5 mb-4">
            <div class="form-group">
                <label class="form-label">Phone Number:</label>
                <InputText class="form-control" @bind-Value="Model!.PhoneNumber" />
            </div>
        </div>

        <div class="col-xl-4 col-lg-4 col-md-5 mb-4">
            <div class="form-group">
                <label class="form-label">Email:</label>
                <InputText class="form-control" @bind-Value="Model!.Email" />
            </div>
        </div>

        <div class="col-xl-4 col-lg-4 col-md-5 mb-4">
            <div class="form-group">
                <label class="form-label">Bank Account Number:</label>
                <InputText class="form-control" @bind-Value="Model!.BankAccountNumber" />
            </div>
        </div>

        <input type="submit" class="btn btn-primary" value="Save" />
    </EditForm>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private EditCustomerViewModel? Model;

    protected override async Task OnInitializedAsync()
    {
        var customerToEditDto = await Sender.Send(new GetCustomerByIdQuery());

        Model = new EditCustomerViewModel
        {
            Id = customerToEditDto.Id,
            Firstname = customerToEditDto.Firstname,
            Lastname = customerToEditDto.Lastname,
            DateOfBirth = customerToEditDto.DateOfBirth,
            PhoneNumber = customerToEditDto.PhoneNumber,
            Email = customerToEditDto.Email,
            BankAccountNumber = customerToEditDto.BankAccountNumber
        };
    }

    async void ValidFormSubmitted(EditContext editContext)
    {
        if (Model is null)
        {
            return;
        }

        var editedCustomerDto = await Sender.Send(new EditCustomerCommand(Model.Firstname,
        Model.Lastname,
        Model.DateOfBirth,
        Model.PhoneNumber,
        Model.Email,
        Model.BankAccountNumber));

        Model = new EditCustomerViewModel
        {
            Id = editedCustomerDto.Id,
            Firstname = editedCustomerDto.Firstname,
            Lastname = editedCustomerDto.Lastname,
            DateOfBirth = editedCustomerDto.DateOfBirth,
            PhoneNumber = editedCustomerDto.PhoneNumber,
            Email = editedCustomerDto.Email,
            BankAccountNumber = editedCustomerDto.BankAccountNumber
        };
    }
}
