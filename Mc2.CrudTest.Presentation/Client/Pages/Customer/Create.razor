@page "/Customer/Create"
@using Mc2.CrudTest.Presentation.Application.Features.Commands.Create;
@using Mc2.CrudTest.Presentation.Application.ViewModels;

<PageTitle>Create Customer</PageTitle>

<h1>Create</h1>

<EditForm Model=@Model OnSubmit=@ValidFormSubmitted>
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="col-xl-4 col-lg-4 col-md-5 mb-4">
        <label class="form-label">First Name:</label>
        <InputText class="form-control" @bind-Value="Model!.Firstname" />
    </div>

    <div class="col-xl-4 col-lg-4 col-md-5 mb-4">
        <label class="form-label">Last Name:</label>
        <InputText class="form-control" @bind-Value="Model!.Lastname" />
    </div>

    <div class="col-xl-4 col-lg-4 col-md-5 mb-4">
        <div class="form-group">
            <label class="form-label">Date Of Birth:</label>
            <InputDate class="form-control" @bind-Value="Model!.DateOfBirth" />
        </div>
    </div>

    <div class="col-xl-4 col-lg-4 col-md-5 mb-4">
        <div class="form-group">
            <label class="form-label">Phone Number:</label>
            <InputText class="form-control" @bind-Value="Model!.PhoneNumber" />
        </div>
    </div>

    <div class="col-xl-4 col-lg-4 col-md-5 mb-4">
        <div class="form-group">
            <label class="form-label">Email:</label>
            <InputText class="form-control" @bind-Value="Model!.Email" />
        </div>
    </div>

    <div class="col-xl-4 col-lg-4 col-md-5 mb-4">
        <div class="form-group">
            <label class="form-label">Bank Account Number:</label>
            <InputText class="form-control" @bind-Value="Model!.BankAccountNumber" />
        </div>
    </div>

    <input type="submit" class="btn btn-primary" value="Save" />
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }

    private CreateCustomerViewModel Model = new CreateCustomerViewModel();

    protected override async Task OnInitializedAsync()
    {
    }

    async void ValidFormSubmitted(EditContext editContext)
    {
        var createdCustomerDto = await Sender.Send(new CreateCustomerCommand(Model.Firstname,
        Model.Lastname,
        Model.DateOfBirth,
        Model.PhoneNumber,
        Model.Email,
        Model.BankAccountNumber));

        Model = new CreateCustomerViewModel
        {
            Firstname = createdCustomerDto.Firstname,
            Lastname = createdCustomerDto.Lastname,
            DateOfBirth = createdCustomerDto.DateOfBirth,
            PhoneNumber = createdCustomerDto.PhoneNumber,
            Email = createdCustomerDto.Email,
            BankAccountNumber = createdCustomerDto.BankAccountNumber
        };
    }
}
